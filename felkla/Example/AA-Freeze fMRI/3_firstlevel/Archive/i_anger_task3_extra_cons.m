
%define T contrasts
% forcecontrastsT = {...
%     'T','ApprH',        [ 1  0  0  0  0  0]; ... 
%     'T','ApprA',        [ 0  1  0  0  0  0]; ... 
%     'T','AvoidH',       [ 0  0  1  0  0  0]; ... 
%     'T','AvoidA',       [ 0  0  0  1  0  0]; ...
%     'T','All_comb',     [ 1  1  1  1  0  0]; ... 
%     'T','Con_vs_Incon', [ 1 -1 -1  1  0  0]; ... 
%     'T','Incon_vs_Con', [-1  1  1 -1  0  0]; ...
%     };

% forcecontrastsT = {...
%     'T','AvoidH_vs_ApprH',        [-1  0  1  0  0  0]; ...
%     'T','ApprA_vs_AvoidA',        [ 0  1  0 -1  0  0]; ...
%     'T','ApprH_vs_AvoidH',        [ 1  0 -1  0  0  0]; ...
%     'T','AvoidA_vs_ApprA',        [ 0 -1  0  1  0  0]; ...
%     'T','Hap_vs_Ang',             [ 1 -1  1 -1  0  0]; ...
%     'T','Ang_vs_Hap',             [-1  1 -1  1  0  0]; ...
%     };

forcecontrastsT = {...
    'T','Ap_vs_Av',             [ 1  1 -1 -1  0  0]; ...
    'T','Av_vs_Ap',             [-1 -1  1  1  0  0]; ...
    };

%loop over T contrasts
for cntrsT=1:size(forcecontrastsT,1)
    matlabbatch{1}.spm.stats.con.consess{cntrsT}.tcon.name = forcecontrastsT{cntrsT,2};
    matlabbatch{1}.spm.stats.con.consess{cntrsT}.tcon.convec = forcecontrastsT{cntrsT,3};
    matlabbatch{1}.spm.stats.con.consess{cntrsT}.tcon.sessrep = 'none';
end

% %F contrast (for PPI later)
% matlabbatch{3}.spm.stats.con.consess{cntrsT+1}.fcon.name = 'task';
% matlabbatch{3}.spm.stats.con.consess{cntrsT+1}.fcon.convec = [eye(4)];
% matlabbatch{3}.spm.stats.con.consess{cntrsT+1}.fcon.sessrep = 'none';
